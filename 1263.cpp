#include <iostream>#include <cstdio>#include <cstring>#include <cstdlib>#include <string>#include <cmath>#include <vector>#include <string>#include <sstream>#include <map>#include <algorithm>using namespace std;struct node {    string Place, Name;    node() {}    friend bool operator <(const node &a1, const node &a2) {        if (a1.Place == a2.Place) return (a1.Name < a2.Name);        return (a1.Place < a2.Place);    }    };map < node, int > M;node a;int x, m;int main() {        int T;    cin >> T;    while (T --) {        M.clear();        cin >> m;        while (m --) {            cin >> a.Name >> a.Place >> x;            M[a] += x;        }        map < node, int > :: iterator it, pr;        it = M.begin();        cout << (it->first).Place << endl;        cout << "   |----" << (it->first).Name << "(" << it->second << ")" << endl;        pr = it;        ++ it;        while (it != M.end()) {            if ((it->first).Place == (pr->first).Place)                cout << "   |----" << (it->first).Name << "(" << it->second << ")" << endl;            else {                cout << (it->first).Place << endl;                cout << "   |----" << (it->first).Name << "(" << it->second << ")" << endl;            }            pr = it;            ++ it;        }        if (T) cout << endl;    }    return 0;}